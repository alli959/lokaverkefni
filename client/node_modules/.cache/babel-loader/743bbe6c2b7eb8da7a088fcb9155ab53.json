{"ast":null,"code":"import _regeneratorRuntime from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport api from '../api';\nexport var BURGER_REQUEST = 'BURGER_REQUEST';\nexport var BURGER_SUCCESS = 'BURGER_SUCCESS';\nexport var BURGER_FAILURE = 'BURGER_FAILURE';\nexport var SEARCH_BURGER_SUCCESS = 'SEARCH_BURGER_SUCCESS';\n\nfunction requestBurger() {\n  return {\n    type: BURGER_REQUEST,\n    isFetching: true\n  };\n}\n\nfunction receiveBurger(burger) {\n  return {\n    type: BURGER_SUCCESS,\n    isFetching: false,\n    burger: burger\n  };\n}\n\nfunction burgerError(message) {\n  return {\n    type: BURGER_FAILURE,\n    isFetching: false,\n    message: message\n  };\n}\n\nexport var fetchBurgers = function fetchBurgers() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var endpoint, burgers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(requestBurger());\n                endpoint = '/burgers';\n                _context.prev = 2;\n                _context.next = 5;\n                return api.get(endpoint);\n\n              case 5:\n                burgers = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                dispatch(burgerError(_context.t0));\n\n              case 11:\n                if (burgers.status !== 200 || !burgers) {\n                  dispatch(burgerError('fail'));\n                }\n\n                dispatch(receiveBurger(burgers));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/alli959/Desktop/Háslóli Íslands 2-20191211T231337Z-001/Háslóli Íslands 2/lokaverkefni/client/src/actions/getBurgers.js"],"names":["api","BURGER_REQUEST","BURGER_SUCCESS","BURGER_FAILURE","SEARCH_BURGER_SUCCESS","requestBurger","type","isFetching","receiveBurger","burger","burgerError","message","fetchBurgers","dispatch","endpoint","get","burgers","status"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;;AAGP,SAASC,aAAT,GAAyB;AACrB,SAAO;AACHC,IAAAA,IAAI,EAAEL,cADH;AAEHM,IAAAA,UAAU,EAAE;AAFT,GAAP;AAIH;;AAED,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,SAAO;AACLH,IAAAA,IAAI,EAAEJ,cADD;AAELK,IAAAA,UAAU,EAAE,KAFP;AAGLE,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD;;AAEH,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC1B,SAAO;AACLL,IAAAA,IAAI,EAAEH,cADD;AAELI,IAAAA,UAAU,EAAE,KAFP;AAGLI,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD;;AAGH,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,gBAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEIS,gBAAAA,QAJD,GAIY,UAJZ;AAAA;AAAA;AAAA,uBAQiBd,GAAG,CAACe,GAAJ,CAAQD,QAAR,CARjB;;AAAA;AAQCE,gBAAAA,OARD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWCH,gBAAAA,QAAQ,CAACH,WAAW,aAAZ,CAAR;;AAXD;AAcH,oBAAIM,OAAO,CAACC,MAAR,KAAmB,GAAnB,IAA0B,CAACD,OAA/B,EAAuC;AACnCH,kBAAAA,QAAQ,CAACH,WAAW,CAAC,MAAD,CAAZ,CAAR;AACH;;AACDG,gBAAAA,QAAQ,CAACL,aAAa,CAACQ,OAAD,CAAd,CAAR;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBH,CApBM","sourcesContent":["import api from '../api';\r\n\r\nexport const BURGER_REQUEST = 'BURGER_REQUEST';\r\nexport const BURGER_SUCCESS = 'BURGER_SUCCESS';\r\nexport const BURGER_FAILURE = 'BURGER_FAILURE';\r\nexport const SEARCH_BURGER_SUCCESS = 'SEARCH_BURGER_SUCCESS';\r\n\r\n\r\nfunction requestBurger() {\r\n    return {\r\n        type: BURGER_REQUEST,\r\n        isFetching: true,\r\n    }\r\n}\r\n\r\nfunction receiveBurger(burger) {\r\n    return {\r\n      type: BURGER_SUCCESS,\r\n      isFetching: false,\r\n      burger,\r\n    }\r\n  }\r\n\r\nfunction burgerError(message) {\r\n    return {\r\n      type: BURGER_FAILURE,\r\n      isFetching: false,\r\n      message,\r\n    }\r\n  }\r\n\r\n\r\nexport const fetchBurgers = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(requestBurger());\r\n\r\n        let endpoint = '/burgers';\r\n\r\n        let burgers;\r\n        try{\r\n            burgers = await api.get(endpoint);\r\n            \r\n        } catch (error) {\r\n            dispatch(burgerError(error));\r\n        }\r\n\r\n        if (burgers.status !== 200 || !burgers){\r\n            dispatch(burgerError('fail'))\r\n        }\r\n        dispatch(receiveBurger(burgers));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}