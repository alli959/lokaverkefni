{"ast":null,"code":"import _regeneratorRuntime from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alli959/Desktop/H\\xE1sl\\xF3li \\xCDslands 2-20191211T231337Z-001/H\\xE1sl\\xF3li \\xCDslands 2/lokaverkefni/client/src/components/changeOrder/ChangeOrder.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchFoodFromOffer } from '../../actions/getFoodFromOffer';\nimport { fetchMatFromFood } from '../../actions/getMaterialsFromFood';\nimport { fetchMaterials } from '../../actions/getMaterials';\nimport './changeOrder.css';\nimport Button from '../button';\n\nvar ChangeOrder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeOrder, _Component);\n\n  function ChangeOrder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChangeOrder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeOrder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: null,\n      itemId: [],\n      offers: [],\n      food: [],\n      plus: [],\n      plusPrice: [],\n      minus: [],\n      foodInOffer: [],\n      totalPrice: 0\n    };\n\n    _this.handleButtonClick = function (e) {\n      /*\r\n      let name = e.currentTarget.getAttribute('name');\r\n      let index = e.currentTarget.getAttribute('id');\r\n      let changeMaterials = []\r\n      console.log(\"e\", e.currentTarget);\r\n      changeMaterials.push(\"changeMaterials\");\r\n      changeMaterials.push(name);\r\n      changeMaterials.push(index);\r\n      this.props.clickHandler(changeMaterials);\r\n      */\n      console.log(e.keyCode);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangeOrder, [{\n    key: \"getFoodInOffers\",\n    value: function () {\n      var _getFoodInOffers = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var dispatch, foodInOffers, i, offerId, temp, foodInOffer, j, empty;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch = this.props.dispatch;\n                foodInOffers = [];\n                i = 0;\n\n              case 3:\n                if (!(i < this.state.offers.length)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                offerId = this.state.offers[i].id;\n\n                if (!(offerId !== -1)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 8;\n                return dispatch(fetchFoodFromOffer(offerId));\n\n              case 8:\n                _context.next = 10;\n                return this.props.foodInOffer;\n\n              case 10:\n                temp = _context.sent;\n                foodInOffer = [];\n\n                for (j = 0; j < temp.length; j++) {\n                  foodInOffer.push(temp[j].foodname);\n                }\n\n                foodInOffers.push(foodInOffer);\n                _context.next = 18;\n                break;\n\n              case 16:\n                empty = [{\n                  none: \"NONE\"\n                }];\n                foodInOffers.push(empty);\n\n              case 18:\n                i++;\n                _context.next = 3;\n                break;\n\n              case 21:\n                return _context.abrupt(\"return\", foodInOffers);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getFoodInOffers() {\n        return _getFoodInOffers.apply(this, arguments);\n      }\n\n      return getFoodInOffers;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var dispatch, _ref, items, offers, food, foodInOffers, _ref2, plus, _ref3, minus, i, offerId, temp, foodInOffer, j, id, foodName;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch = this.props.dispatch; //putting it allt in a dirrerent array so It will be easier to send in the order.\n\n                _context2.next = 3;\n                return this.props;\n\n              case 3:\n                _ref = _context2.sent;\n                items = _ref.items;\n                offers = [];\n                food = [];\n                foodInOffers = [];\n                _context2.next = 10;\n                return this.props;\n\n              case 10:\n                _ref2 = _context2.sent;\n                plus = _ref2.plus;\n                _context2.next = 14;\n                return this.props;\n\n              case 14:\n                _ref3 = _context2.sent;\n                minus = _ref3.minus;\n                items.map(function (result) {\n                  if (result.name.includes(\"TilboÃ°\")) {\n                    offers.push({\n                      id: result.id,\n                      name: result.name\n                    });\n                    food.push({\n                      id: -1,\n                      name: \"NONE\"\n                    });\n                  } else {\n                    offers.push({\n                      id: -1,\n                      name: \"NONE\"\n                    });\n                    food.push({\n                      id: result.id,\n                      name: result.name\n                    });\n                  }\n                });\n                i = 0;\n\n              case 18:\n                if (!(i < offers.length)) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                offerId = offers[i].id;\n\n                if (!(offerId !== -1)) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                _context2.next = 23;\n                return dispatch(fetchFoodFromOffer(offerId));\n\n              case 23:\n                _context2.next = 25;\n                return this.props.foodInOffer;\n\n              case 25:\n                temp = _context2.sent;\n                foodInOffer = [];\n\n                for (j = 0; j < temp.length; j++) {\n                  id = temp[j].foodid;\n                  foodName = temp[j].foodname;\n                  foodInOffer.push({\n                    foodId: id,\n                    foodname: foodName\n                  });\n                }\n\n                foodInOffers.push(foodInOffer);\n                _context2.next = 32;\n                break;\n\n              case 31:\n                foodInOffers.push([{\n                  foodId: -1,\n                  foodname: \"NONE\"\n                }]);\n\n              case 32:\n                i++;\n                _context2.next = 18;\n                break;\n\n              case 35:\n                this.setState({\n                  items: items,\n                  offers: offers,\n                  food: food,\n                  plus: plus,\n                  minus: minus,\n                  foodInOffer: foodInOffers,\n                  totalPrice: 0\n                });\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var minus = this.props.minus;\n      var plus = this.props.plus;\n\n      if (JSON.stringify(prevProps.minus) !== JSON.stringify(this.props.minus) || JSON.stringify(prevProps.plus) !== JSON.stringify(this.props.plus)) {\n        this.setState({\n          minus: minus,\n          plus: plus\n        });\n      }\n    }\n  }, {\n    key: \"addFoodItem\",\n    value: function addFoodItem(callback, id) {\n      var itemId = callback(false);\n      this.props.clickHandler({\n        itemId: callback(false),\n        foodId: id\n      });\n    }\n  }, {\n    key: \"addOffer\",\n    value: function addOffer(callback, foodinoffer, offer, minus, plus) {\n      var _this2 = this;\n\n      if (foodinoffer[0].foodname === \"NONE\" || !foodinoffer) {\n        return;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"offerName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, offer.name)), foodinoffer.map(function (result, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            value: result.foodname,\n            className: \"foodItem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, _this2.addFood(callback, {\n            id: result.foodId,\n            name: result.foodname\n          }, minus, plus));\n        }));\n      }\n    }\n  }, {\n    key: \"addFood\",\n    value: function addFood(callback, food, minus, plus) {\n      var _this3 = this;\n\n      if (food.name === \"NONE\") {\n        return;\n      }\n\n      var key = callback(true);\n      var item = {\n        itemId: key,\n        foodId: food.id\n      };\n      return React.createElement(\"div\", {\n        key: key,\n        id: key,\n        value: food.id,\n        className: \"foodItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: key,\n        onClick: function onClick() {\n          {\n            _this3.checkMinus();\n          }\n\n          _this3.props.clickHandler({\n            itemId: key,\n            foodId: food.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, food.name)), minus[key] !== \"NONE\" ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"-\", minus[key]) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), plus[key] !== \"NONE\" ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"+\", plus[key]) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(value) {\n      if (value === \"NONE\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /*\r\n                <div key = {index} className = \"order\">\r\n                    <h2 className = \"offer_name\" style={this.isHidden(result.offer.name)?{display:\"none\"}:{display: \"flex\"}}>{result.offer.name}</h2>\r\n                    {result.foodInOffer.map((food,i) => \r\n                        \r\n                        <div key = {i+index} className = \"offer_item\">\r\n                            <button style={this.isHidden(food)?{display:\"none\"}:{display: \"inline\"}} id={i} name={food} onClick = {this.handleButtonClick}>\r\n                                <h3 id = {i}>{food}</h3>\r\n                            </button>\r\n                        </div>    \r\n                    )}\r\n                    <button style={this.isHidden(result.food.name)?{display:\"none\"}:{display: \"inline\"}} id={index} name={result.food.name} onClick = {this.handleButtonClick}><h3>{result.food.name}</h3></button>\r\n                    <div className = \"subContains\">\r\n                \r\n                    </div>\r\n                </div>*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var items = this.props.items;\n      var offers = this.state.offers;\n      var food = this.state.food;\n      var foodInOffer = this.state.foodInOffer;\n      var minus = this.state.minus;\n      var plus = this.state.plus;\n      var order = []; //putting all information to an array of object so I can map through the object\n\n      for (var i = 0; i < offers.length; i++) {\n        var temp = {\n          offer: offers[i],\n          food: food[i],\n          foodInOffer: foodInOffer[i]\n        };\n        order.push(temp);\n      } //adding an itemId\n\n\n      var itemId = [];\n\n      for (var _i = 0; _i < order.length; _i++) {\n        if (order[_i].food.name === \"NONE\") {\n          for (var j = 0; j < order[_i].foodInOffer.length; j++) {\n            itemId.push(itemId.length);\n          }\n        } else {\n          itemId.push(itemId.length);\n        }\n      }\n\n      var callback = function callback(shouldShift) {\n        if (shouldShift) {\n          return itemId.shift();\n        } else {\n          return itemId[0];\n        }\n      };\n\n      if (items === null || items.length === 0) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, \" Engar pantanir skr\\xE1\\xF0ar... \");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"changeOrder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"changeOrderBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, order.map(function (result, index) {\n        return React.createElement(\"div\", {\n          className: \"orderItem\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, _this4.addOffer(callback, result.foodInOffer, result.offer, minus, plus), _this4.addFood(callback, result.food, minus, plus));\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (JSON.stringify(props.minus) !== JSON.stringify(state.minus)) {\n        return {\n          minus: props.minus\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ChangeOrder;\n}(Component);\n\nChangeOrder.propTypes = {\n  items: PropTypes.array,\n  minus: PropTypes.array,\n  plus: PropTypes.array,\n  clickHandler: PropTypes.func,\n  isFetching: PropTypes.bool,\n  foodInOffer: PropTypes.array,\n  message: PropTypes.object,\n  dispatch: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetching: state.getFoodFromOffer.isFetching,\n    foodInOffer: state.getFoodFromOffer.foodInOffer,\n    message: state.getFoodFromOffer.message\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(ChangeOrder));","map":{"version":3,"sources":["/home/alli959/Desktop/HÃ¡slÃ³li Ãslands 2-20191211T231337Z-001/HÃ¡slÃ³li Ãslands 2/lokaverkefni/client/src/components/changeOrder/ChangeOrder.js"],"names":["React","Component","PropTypes","withRouter","connect","fetchFoodFromOffer","fetchMatFromFood","fetchMaterials","Button","ChangeOrder","state","items","itemId","offers","food","plus","plusPrice","minus","foodInOffer","totalPrice","handleButtonClick","e","console","log","keyCode","dispatch","props","foodInOffers","i","length","offerId","id","temp","j","push","foodname","empty","none","map","result","name","includes","foodid","foodName","foodId","setState","prevProps","JSON","stringify","callback","clickHandler","foodinoffer","offer","index","addFood","key","item","checkMinus","value","order","shouldShift","shift","addOffer","propTypes","array","func","isFetching","bool","message","object","mapStateToProps","getFoodFromOffer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchFoodFromOffer } from '../../actions/getFoodFromOffer';\r\nimport { fetchMatFromFood } from '../../actions/getMaterialsFromFood';\r\nimport { fetchMaterials } from '../../actions/getMaterials';\r\n\r\nimport './changeOrder.css';\r\nimport Button from '../button';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ChangeOrder extends Component {\r\n\r\n    state = {\r\n        items: null,\r\n        itemId: [],\r\n        offers: [],\r\n        food: [],\r\n        plus: [],\r\n        plusPrice: [],\r\n        minus: [],\r\n        foodInOffer: [],\r\n        totalPrice: 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        items: PropTypes.array,\r\n        minus: PropTypes.array,\r\n        plus: PropTypes.array,\r\n        clickHandler: PropTypes.func,\r\n        isFetching: PropTypes.bool,\r\n        foodInOffer: PropTypes.array,\r\n        message: PropTypes.object,\r\n        dispatch: PropTypes.func,\r\n    }\r\n    \r\n    async getFoodInOffers(){\r\n        const {dispatch} = this.props;\r\n        const foodInOffers = [];\r\n        for(let i = 0; i<this.state.offers.length; i++){\r\n            const offerId = this.state.offers[i].id;\r\n            if(offerId !== -1){\r\n                await dispatch(fetchFoodFromOffer(offerId));\r\n                const temp = await this.props.foodInOffer;\r\n                const foodInOffer = [];\r\n                for(let j = 0; j<temp.length; j++){\r\n                    foodInOffer.push(temp[j].foodname);\r\n                }\r\n                foodInOffers.push(foodInOffer);\r\n            }\r\n            else{\r\n                const empty = [{none:\"NONE\"}];\r\n                foodInOffers.push(empty);\r\n            }\r\n        }\r\n\r\n        return foodInOffers;\r\n\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n    \r\n    \r\n    if(JSON.stringify(props.minus) !== JSON.stringify(state.minus)){\r\n        return {minus: props.minus}\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        \r\n        const {dispatch} = this.props;\r\n        \r\n        //putting it allt in a dirrerent array so It will be easier to send in the order.\r\n        let {items} = await this.props;\r\n\r\n        let offers = [];\r\n        let food = [];\r\n        let foodInOffers = [];\r\n        let {plus} = await this.props;\r\n        let {minus} = await this.props;\r\n        items.map(result => {\r\n            if(result.name.includes(\"TilboÃ°\")){\r\n                offers.push({ id: result.id, name: result.name});\r\n                food.push({id: -1, name: \"NONE\"});\r\n            }\r\n            else{\r\n                offers.push({id: -1, name: \"NONE\"});\r\n                food.push({ id: result.id, name: result.name});\r\n            }\r\n        })\r\n        \r\n        for(let i = 0; i<offers.length; i++){\r\n            const offerId = offers[i].id;\r\n            if(offerId !== -1){\r\n                await dispatch(fetchFoodFromOffer(offerId));\r\n                const temp = await this.props.foodInOffer;\r\n                const foodInOffer = [];\r\n                for(let j = 0; j<temp.length; j++){\r\n\r\n                    const id = temp[j].foodid;\r\n                    const foodName = temp[j].foodname\r\n                    foodInOffer.push({foodId: id, foodname: foodName});\r\n                }\r\n                foodInOffers.push(foodInOffer);\r\n            }\r\n            else{\r\n\r\n                foodInOffers.push([{foodId: -1, foodname: \"NONE\"}]);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            items: items,\r\n            offers: offers,\r\n            food: food,\r\n            plus: plus,\r\n            minus: minus,\r\n            foodInOffer: foodInOffers,\r\n            totalPrice: 0,\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {minus} = this.props;\r\n        const {plus} = this.props;\r\n        if((JSON.stringify(prevProps.minus) !== JSON.stringify(this.props.minus)) || (JSON.stringify(prevProps.plus) !== JSON.stringify(this.props.plus))){\r\n            this.setState({\r\n                minus: minus,\r\n                plus: plus,\r\n            })\r\n        }\r\n    } \r\n\r\n    addFoodItem(callback, id){\r\n        const itemId = callback(false)\r\n        this.props.clickHandler({\r\n            itemId: callback(false),\r\n            foodId: id\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    addOffer(callback, foodinoffer,offer, minus, plus){\r\n        if(foodinoffer[0].foodname === \"NONE\" || !foodinoffer){\r\n            return;\r\n        }\r\n        else{\r\n\r\n            return (\r\n            <div>\r\n            \r\n            <div className = \"offerName\">\r\n                <h2>{offer.name}</h2>\r\n            </div>\r\n            {foodinoffer.map((result,index) =>\r\n                <div key = {index} value = {result.foodname} className = \"foodItem\">\r\n                    {this.addFood(callback,{id: result.foodId, name: result.foodname}, minus, plus)}\r\n            </div>\r\n            \r\n            )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n    addFood(callback,food, minus, plus){\r\n        if(food.name === \"NONE\"){\r\n            return;\r\n        }\r\n        const key = callback(true);\r\n        const item = {\r\n            itemId: key,\r\n            foodId: food.id\r\n        }\r\n        return(\r\n            <div key = {key} id = {key} value = {food.id} className = \"foodItem\">\r\n                <Button id = {key} onClick = {() => {\r\n                    {this.checkMinus()}\r\n                    this.props.clickHandler({\r\n                        itemId: key,\r\n                        foodId: food.id\r\n                    })\r\n                }}>\r\n                    <p>{food.name}</p>\r\n                </Button>\r\n                {minus[key] !== \"NONE\"?<p>-{minus[key]}</p>:<div></div>}\r\n                {plus[key] !== \"NONE\" ? <p>+{plus[key]}</p>:<div></div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleButtonClick = (e) => {\r\n        /*\r\n        let name = e.currentTarget.getAttribute('name');\r\n        let index = e.currentTarget.getAttribute('id');\r\n        let changeMaterials = []\r\n        console.log(\"e\", e.currentTarget);\r\n        changeMaterials.push(\"changeMaterials\");\r\n        changeMaterials.push(name);\r\n        changeMaterials.push(index);\r\n        this.props.clickHandler(changeMaterials);\r\n       */\r\n\r\n       console.log(e.keyCode);\r\n    }\r\n\r\n    isHidden(value){\r\n        if(value === \"NONE\"){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n/*\r\n            <div key = {index} className = \"order\">\r\n                <h2 className = \"offer_name\" style={this.isHidden(result.offer.name)?{display:\"none\"}:{display: \"flex\"}}>{result.offer.name}</h2>\r\n                {result.foodInOffer.map((food,i) => \r\n                    \r\n                    <div key = {i+index} className = \"offer_item\">\r\n                        <button style={this.isHidden(food)?{display:\"none\"}:{display: \"inline\"}} id={i} name={food} onClick = {this.handleButtonClick}>\r\n                            <h3 id = {i}>{food}</h3>\r\n                        </button>\r\n                    </div>    \r\n                )}\r\n                <button style={this.isHidden(result.food.name)?{display:\"none\"}:{display: \"inline\"}} id={index} name={result.food.name} onClick = {this.handleButtonClick}><h3>{result.food.name}</h3></button>\r\n                <div className = \"subContains\">\r\n            \r\n                </div>\r\n            </div>*/\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {items } = this.props;\r\n        const {offers} = this.state;\r\n        const {food} = this.state;\r\n        const {foodInOffer} = this.state;\r\n        const {minus} = this.state;\r\n        const {plus} = this.state;\r\n\r\n        const order = [];\r\n        //putting all information to an array of object so I can map through the object\r\n        for(let i = 0; i<offers.length; i++){\r\n            let temp = {\r\n                offer: offers[i],\r\n                food: food[i],\r\n                foodInOffer: foodInOffer[i]\r\n            }\r\n            order.push(temp);\r\n        }\r\n\r\n\r\n\r\n        //adding an itemId\r\n\r\n        let itemId = [];\r\n        for(let i = 0; i<order.length; i++){\r\n            if(order[i].food.name === \"NONE\"){\r\n                for(let j = 0; j<order[i].foodInOffer.length; j++){\r\n                    itemId.push(itemId.length);\r\n                }\r\n            }\r\n            else{\r\n                itemId.push(itemId.length);\r\n            }\r\n        }\r\n\r\n        const callback = (shouldShift) => {\r\n                if(shouldShift){\r\n                    return(itemId.shift());\r\n                }\r\n                else{\r\n                    return(itemId[0]);\r\n                }\r\n                \r\n            \r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        if(items === null || items.length === 0){\r\n            return(\r\n                <h2> Engar pantanir skrÃ¡Ã°ar... </h2>\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className = \"changeOrder\">\r\n                <ul className = \"changeOrderBox\">\r\n                    {order.map((result,index) =>\r\n                    <div className = \"orderItem\" key = {index}>\r\n                        \r\n                        {this.addOffer(callback,result.foodInOffer,result.offer, minus, plus)}\r\n                        {this.addFood(callback, result.food, minus, plus)}\r\n                    </div>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      isFetching: state.getFoodFromOffer.isFetching,\r\n      foodInOffer: state.getFoodFromOffer.foodInOffer,\r\n      message: state.getFoodFromOffer.message,\r\n    };\r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps)(ChangeOrder));"]},"metadata":{},"sourceType":"module"}